/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.example;

import java.util.List;
import java.util.Optional;
import java.util.Random;
import java.util.function.Function;
import java.util.stream.Stream;
import net.moznion.gimei.Gimei;
import net.moznion.gimei.NameUnit;
import net.moznion.gimei.name.Name;

public class App {

    native String greetingTo(String name);

    native List<String> repeat(int times, String target);

    public static void main(String[] args) {
        loadLibrary();
        App app = new App();
        Stream<NameUnit> randomNames = new Random()
                .longs(100L)
                .mapToObj(Gimei::generateName)
                .map(Name::first);
        NameUnit emptyName = new NameUnit(List.of("", "", ""));
        Stream.concat(Stream.of(emptyName), randomNames)
                .map(NameUnit::kanji)
                .map(wrap(app::greetingTo))
                .flatMap(Optional::stream)
                .forEach(System.out::println);
        try {
            System.out.println(app.greetingTo(null));
        } catch (Exception e) {
            e.printStackTrace();
        }
        List<String> addresses = app.repeat(3, Gimei.generateAddress().kanji());
        addresses.stream()
                .map(app::greetingTo)
                .forEach(System.out::println);
    }

    static <T, R> Function<T, Optional<R>> wrap(Function<? super T, ? extends R> function) {
        return t -> {
            try {
                R result = function.apply(t);
                return Optional.ofNullable(result);
            } catch (Exception e) {
                return Optional.empty();
            }
        };
    }

    static void loadLibrary() {
        System.loadLibrary("cpp-lib");
    }
}
